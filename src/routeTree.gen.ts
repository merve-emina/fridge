/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as IndexImport } from './routes/index'
import { Route as MealIdImport } from './routes/meal.$id'
import { Route as catalogFilterImport } from './routes/(catalog)/filter'
import { Route as catalogCategoryIndexImport } from './routes/(catalog)/category/index'
import { Route as catalogCategoryIdImport } from './routes/(catalog)/category/$id'

// Create/Update Routes

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const MealIdRoute = MealIdImport.update({
  id: '/meal/$id',
  path: '/meal/$id',
  getParentRoute: () => rootRoute,
} as any)

const catalogFilterRoute = catalogFilterImport.update({
  id: '/(catalog)/filter',
  path: '/filter',
  getParentRoute: () => rootRoute,
} as any)

const catalogCategoryIndexRoute = catalogCategoryIndexImport.update({
  id: '/(catalog)/category/',
  path: '/category/',
  getParentRoute: () => rootRoute,
} as any)

const catalogCategoryIdRoute = catalogCategoryIdImport.update({
  id: '/(catalog)/category/$id',
  path: '/category/$id',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/(catalog)/filter': {
      id: '/(catalog)/filter'
      path: '/filter'
      fullPath: '/filter'
      preLoaderRoute: typeof catalogFilterImport
      parentRoute: typeof rootRoute
    }
    '/meal/$id': {
      id: '/meal/$id'
      path: '/meal/$id'
      fullPath: '/meal/$id'
      preLoaderRoute: typeof MealIdImport
      parentRoute: typeof rootRoute
    }
    '/(catalog)/category/$id': {
      id: '/(catalog)/category/$id'
      path: '/category/$id'
      fullPath: '/category/$id'
      preLoaderRoute: typeof catalogCategoryIdImport
      parentRoute: typeof rootRoute
    }
    '/(catalog)/category/': {
      id: '/(catalog)/category/'
      path: '/category'
      fullPath: '/category'
      preLoaderRoute: typeof catalogCategoryIndexImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/filter': typeof catalogFilterRoute
  '/meal/$id': typeof MealIdRoute
  '/category/$id': typeof catalogCategoryIdRoute
  '/category': typeof catalogCategoryIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/filter': typeof catalogFilterRoute
  '/meal/$id': typeof MealIdRoute
  '/category/$id': typeof catalogCategoryIdRoute
  '/category': typeof catalogCategoryIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/(catalog)/filter': typeof catalogFilterRoute
  '/meal/$id': typeof MealIdRoute
  '/(catalog)/category/$id': typeof catalogCategoryIdRoute
  '/(catalog)/category/': typeof catalogCategoryIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/filter' | '/meal/$id' | '/category/$id' | '/category'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/filter' | '/meal/$id' | '/category/$id' | '/category'
  id:
    | '__root__'
    | '/'
    | '/(catalog)/filter'
    | '/meal/$id'
    | '/(catalog)/category/$id'
    | '/(catalog)/category/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  catalogFilterRoute: typeof catalogFilterRoute
  MealIdRoute: typeof MealIdRoute
  catalogCategoryIdRoute: typeof catalogCategoryIdRoute
  catalogCategoryIndexRoute: typeof catalogCategoryIndexRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  catalogFilterRoute: catalogFilterRoute,
  MealIdRoute: MealIdRoute,
  catalogCategoryIdRoute: catalogCategoryIdRoute,
  catalogCategoryIndexRoute: catalogCategoryIndexRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/(catalog)/filter",
        "/meal/$id",
        "/(catalog)/category/$id",
        "/(catalog)/category/"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/(catalog)/filter": {
      "filePath": "(catalog)/filter.tsx"
    },
    "/meal/$id": {
      "filePath": "meal.$id.tsx"
    },
    "/(catalog)/category/$id": {
      "filePath": "(catalog)/category/$id.tsx"
    },
    "/(catalog)/category/": {
      "filePath": "(catalog)/category/index.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
